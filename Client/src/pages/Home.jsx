import React from "react";
import { useState, useEffect } from "react";
import { Card, Form, Loading } from "../components";
import { set } from "mongoose";
const Home = () => {
  const [loading, setLoading] = useState(false);
  const [posts, setPost] = useState(null);
  const [searchText, setSearchText] = useState("");
  const [searchResult, setSearchResult] = useState(null);
  const [searchTimout, setSearchTimeout] = useState(null);
  useEffect(() => {
    const fetchPost = async () => {
      try {
        setLoading(true);
        const response = await fetch("http://localhost:8080/api/v1/post");
        const data = await response.json();
        setPost(data.posts.reverse());
        setLoading(false);
      } catch (error) {
        console.log(error);
      } finally {
        setLoading(false);
      }
    };
    fetchPost();
  }, []);

  const handleSearch = (e) => {
    clearTimeout(searchTimout);
    setSearchText(e.target.value);
    setSearchTimeout(
      setTimeout(() => {
        const searchResult = posts.filter(
          (item) =>
            item.name.toLowerCase().includes(searchText.toLowerCase()) ||
            item.prompt.toLowerCase().includes(searchText.toLowerCase())
        );
        setSearchResult(searchResult);
      }, 500)
    );
  };
  return (
    <section className="max-w-7xl mx-auto">
      <div>
        <h1 className="font-extrabold text-[#222328] text-[32px]">
          The community for creatives
        </h1>
        <p className="mt-2 text-[#666e75] text-[14px] max-w-[500px]">
          Browse throught a collection of imaginative and visaully stunning
          prompts submitted by the community stunning images generated by DALL-E
        </p>
      </div>
      <div className="mt-16">
        <Form
          labelName="Search"
          type="text"
          name="search"
          placeholder="Search"
          value={searchText}
          handleChange={handleSearch}
        />
      </div>
      <div className="mt-10">
        {loading ? (
          <div className="flex justify-center items-center">
            <Loading />
          </div>
        ) : (
          <>
            {searchText && (
              <h2 className="font-medium text-[#666e75] text-xl mb-3">
                Search results for{" "}
                <span className="font-bold">{searchText}</span>
              </h2>
            )}
            {
              <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
                {searchText ? (
                  <RenderPost data={searchResult} title="Search Result" />
                ) : (
                  <RenderPost data={posts} title="no result found" />
                )}
              </div>
            }
          </>
        )}
      </div>
    </section>
  );
};

export default Home;

const RenderPost = ({ data, title }) => {
  if (data?.length > 0) {
    return data.map((post) => <Card post={post} />);
  }
  return <h2 className="text-[#666e75] mt-5 font-bold uppercase">{title}</h2>;
};
